// Generated by CoffeeScript 1.6.3
(function() {
  var data, getLoadedCountry, initialize, loadCountry, loadedCountries, openCountries, removeFromMap, renderCountries, _;

  _ = this._;

  window.data = data = {
    open_countries: [],
    loaded_countries: []
  };

  loadedCountries = data.loaded_countries;

  openCountries = data.open_countries;

  getLoadedCountry = function(name) {
    return _.find(loadedCountries, function(loadedCountry) {
      return loadedCountry.name === name;
    });
  };

  loadCountry = function(c) {
    var country;
    country = getLoadedCountry(c.name);
    if (!country) {
      loadedCountries.push(c);
      return renderCountries();
    }
  };

  renderCountries = function() {
    var c, html, oDiv, _i, _len, _results;
    oDiv = $('#open_countries').empty();
    _results = [];
    for (_i = 0, _len = loadedCountries.length; _i < _len; _i++) {
      c = loadedCountries[_i];
      html = "<span id='" + c.abbrev + "'>" + c.name + "</span>";
      _results.push(oDiv.append("<div>" + html + " <a href='#' class='remove'>remove</a>      <a href='#' class='refresh'>refresh</a></div>"));
    }
    return _results;
  };

  initialize = function() {
    var mapOptions;
    mapOptions = {
      zoom: 3,
      center: new google.maps.LatLng(24.4441, 121.19313333333334),
      mapTypeId: google.maps.MapTypeId.TERRAIN
    };
    return data.map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
  };

  removeFromMap = function(c) {};

  $(function() {
    var country_names, meta;
    meta = window.meta;
    country_names = _.map(meta, function(c) {
      return c.name;
    });
    return $('input').typeahead({
      name: 'countries',
      local: country_names,
      limit: 10
    }).on('typeahead:selected', function(e, selected, dataName) {
      var country, map, polys, val;
      val = selected.value;
      country = getLoadedCountry(val);
      if (country) {
        return displayCountry(country);
      } else {
        map = data.map;
        country = _.find(meta, function(c) {
          return val === c.name;
        });
        country.polygons = polys = [];
        return $.getJSON("public/data/countries/" + country.abbrev + ".json").then(function(resp) {
          var coords, point, poly, polygon, _i, _j, _len, _len1, _ref, _ref1;
          _ref = resp.polygons;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            poly = _ref[_i];
            coords = [];
            _ref1 = poly.points;
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              point = _ref1[_j];
              if (point.length === 2) {
                coords.push(new google.maps.LatLng(point[0], point[1]));
              }
            }
            polygon = {};
            polygon = new google.maps.Polygon({
              map: map,
              paths: coords,
              strokeColor: "#FF0000",
              strokeOpacity: 0.8,
              strokeWeight: 1,
              fillColor: "#FF0000",
              fillOpacity: 0.35,
              draggable: true,
              geodesic: true
            });
            polys.push(polygon);
          }
          return loadCountry(country);
        });
      }
    });
  });

  google.maps.event.addDomListener(window, "load", initialize);

}).call(this);
